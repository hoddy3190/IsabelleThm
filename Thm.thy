theory Thm imports Main begin

thm conjI       (* ⟦?P; ?Q⟧ ⟹ ?P ∧ ?Q *)
thm conjE       (* ⟦?P ∧ ?Q; ⟦?P; ?Q⟧ ⟹ ?R⟧ ⟹ ?R *)
thm conjunct1   (* ?P ∧ ?Q ⟹ ?P  usually using with drule, but sometimes with erule *)
thm conjunct2   (* ?P ∧ ?Q ⟹ ?Q   usually using with drule, but sometimes with erule*)
thm disjI1      (* ?P ⟹ ?P ∨ ?Q *)
thm disjI2      (* ?Q ⟹ ?P ∨ ?Q *)
thm disjE       (* ⟦?P ∨ ?Q; ?P ⟹ ?R; ?Q ⟹ ?R⟧ ⟹ ?R  always usable *)
thm impI        (* (?P ⟹ ?Q) ⟹ ?P ⟶ ?Q  usually using with rule *)
thm mp          (* ⟦?P ⟶ ?Q; ?P⟧ ⟹ ?Q  usually using with drule *)
thm iffI        (* ⟦?P ⟹ ?Q; ?Q ⟹ ?P⟧ ⟹ ?P = ?Q *)
thm notI        (* (?P ⟹ False) ⟹ ¬ ?P *)
thm ccontr      (* (¬ ?P ⟹ False) ⟹ ?P *)
thm notE        (* ⟦¬ ?P; ?P⟧ ⟹ ?R *)
thm classical   (* (¬ ?P ⟹ ?P) ⟹ ?P  using with rule *)
thm subst       (* ⟦?s = ?t; ?P ?s⟧ ⟹ ?P ?t *)
thm ssubst      (* ⟦?t = ?s; ?P ?s⟧ ⟹ ?P ?t *)
thm allI        (* (⋀x. ?P x) ⟹ ∀x. ?P x *)
thm spec        (* ∀x. ?P x ⟹ ?P ?x  using with drule_tac *)
thm exI         (* ?P ?x ⟹ ∃x. ?P x  using with rule_tac *)
thm exE         (* ⟦∃x. ?P x; ⋀x. ?P x ⟹ ?Q⟧ ⟹ ?Q   always usable *)

thm insert_iff  (* (?a ∈ insert ?b ?A) = (?a = ?b ∨ ?a ∈ ?A) *)
thm empty_iff   (* (?c ∈ {}) = False *)
thm mem_Collect_eq  (* (?a ∈ Collect ?P) = ?P ?a  集合の記法{}を外すときに使う。Collect P は {x. P x} と同じ *)
thm subsetI     (* (⋀x. x ∈ ?A ⟹ x ∈ ?B) ⟹ ?A ⊆ ?B  subsetの証明をする第一手目はこれ *)
thm collectI    (* ?P ?a ⟹ ?a ∈ {x. ?P x} ruleでつかうことが多い。subst mem_Collect_eqでもよい *)
thm CollectD    (* ?a ∈ {x. ?P x} ⟹ ?P ?a *)
thm UNIV_def    (* UNIV = {x. True} *)
thm UNIV_I      (* ?x ∈ UNIV *)
thm Pow_def     (* Pow ?A = {B. B ⊆ ?A} *)
thm equalityI   (* ?A ⊆ ?B ⟹ ?B ⊆ ?A ⟹ ?A = ?B *)
thm UnionI      (* ?X ∈ ?C ⟹ ?A ∈ ?X ⟹ ?A ∈ ⋃ ?C *)
thm UnionE      (* ?A ∈ ⋃ ?C ⟹ (⋀X. ?A ∈ X ⟹ X ∈ ?C ⟹ ?R) ⟹ ?R *)



